[{"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\index.js":"1","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\App.js":"2","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Search.js":"3","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Argon\\examples\\Profile.js":"4","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\components\\Footers\\SimpleFooter.js":"5","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\components\\Navbars\\DemoNavbar.js":"6","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Argon\\examples\\Login.js":"7","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Recipe.js":"8"},{"size":846,"mtime":1610826640245,"results":"9","hashOfConfig":"10"},{"size":1079,"mtime":1610826702972,"results":"11","hashOfConfig":"10"},{"size":8129,"mtime":1610825061224,"results":"12","hashOfConfig":"10"},{"size":6595,"mtime":1610825061220,"results":"13","hashOfConfig":"10"},{"size":5189,"mtime":1610829118214,"results":"14","hashOfConfig":"10"},{"size":11823,"mtime":1610825061188,"results":"15","hashOfConfig":"10"},{"size":5875,"mtime":1610826381565,"results":"16","hashOfConfig":"10"},{"size":5631,"mtime":1610828628284,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1qh19as",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\index.js",[],["36","37"],"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\App.js",[],"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Search.js",["38","39","40","41"],"import React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, UncontrolledTooltip } from \"reactstrap\";\r\nimport {\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n// core Argon components\r\nimport DemoNavbar from \"../components/Navbars/DemoNavbar.js\";\r\nimport SimpleFooter from \"../components/Footers/SimpleFooter.js\";\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [\r\n            \"Flour\",\r\n                \"Salt\",\r\n                \"Pepper\",\r\n                \"Milk\",\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.documentElement.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n        this.refs.main.scrollTop = 0;\r\n    }\r\n\r\n    addItem = (e) => {\r\n        // Prevent button click from submitting form\r\n        e.preventDefault();\r\n\r\n        // Create variables for our list, the item to add, and our form\r\n        let list = this.state.list;\r\n        const newItem = document.getElementById(\"addInput\");\r\n        const form = document.getElementById(\"addItemForm\");\r\n\r\n        // If our input has a value\r\n        if (newItem.value !== \"\") {\r\n            // Add the new item to the end of our list array\r\n            list.push(newItem.value);\r\n            // Then we use that to set the state for list\r\n            this.setState({\r\n                list: list\r\n            });\r\n            // Finally, we need to reset the form\r\n            newItem.classList.remove(\"is-danger\");\r\n            form.reset();\r\n        } else {\r\n            // If the input doesn't have a value, make the border red since it's required\r\n            newItem.classList.add(\"is-danger\");\r\n        }\r\n    }\r\n\r\n    removeItem = (item) => {\r\n        // Put our list into an array\r\n        const list = this.state.list.slice();\r\n        // Check to see if item passed in matches item in array\r\n        list.some((el, i) => {\r\n            if (el === item) {\r\n                // If item matches, remove it from array\r\n                list.splice(i, 1);\r\n                return true;\r\n            }\r\n        });\r\n        // Set state to list\r\n        this.setState({\r\n            list: list\r\n        });\r\n    }\r\n\r\n    // Used to manage enter keypresses and future AJAX\r\n    handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n            this.addItem(event);\r\n        }}\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DemoNavbar />\r\n                <main className=\"search-page\" ref=\"main\">\r\n                    <section className=\"section-profile-cover section-shaped my-0\">\r\n                        {/* Circles background */}\r\n                        <div className=\"shape shape-style-1 shape-default alpha-4\">\r\n                            <span />\r\n                            <span />\r\n                            <span />\r\n                            <span />\r\n                            <span />\r\n                            <span />\r\n                            <span />\r\n                        </div>\r\n                        {/* SVG separator */}\r\n                        <div className=\"separator separator-bottom separator-skew\">\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                preserveAspectRatio=\"none\"\r\n                                version=\"1.1\"\r\n                                viewBox=\"0 0 2560 100\"\r\n                                x=\"0\"\r\n                                y=\"0\"\r\n                            >\r\n                                <polygon\r\n                                    className=\"fill-white\"\r\n                                    points=\"2560 0 2560 100 0 100\"\r\n                                />\r\n                            </svg>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"Search-bar\">\r\n                        <Form onSubmit={() => {return false;}} className=\"form\" id=\"addItemForm\" style={{textAlign: \"center\",\r\n                                                                        padding:\"5px\"}}>\r\n\r\n                            <FormGroup onKeyPress={this.handleKeyPress} style={{margin: \"0vw 20vw 0vw\"}}>\r\n                            <InputGroup className=\"mb-4\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>\r\n                                        <i className=\"ni ni-zoom-split-in\" />\r\n                                    </InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input id=\"addInput\" placeholder=\"Search\" type=\"text\"\r\n                                    style={{fontSize: \"3vh\"}}/>\r\n                            </InputGroup>\r\n                            </FormGroup>\r\n                            <Button color=\"success\" outline type=\"button\" onClick={this.addItem}>\r\n                                Add Ingredient\r\n                            </Button>\r\n                        </Form>\r\n                        <ul style={{display: \"flex\", flexWrap:\"wrap\",\r\n                                        flexFlow: \"row wrap\",\r\n                                        justifyContent: \"space-around\",\r\n                                        margin: \"2vh 2.5vw\",\r\n                                        listStyleType: \"none\"}}>\r\n                            {this.state.list.map(item => (\r\n                                <li key={item} style={{marginRight: 30, marginBottom:15}}>\r\n                                    <Button color=\"secondary\" size=\"lg\" type=\"button\">\r\n                                        {item}\r\n                                    </Button>\r\n                                    <Button\r\n                                        color=\"info\"\r\n                                        data-placement=\"top\"\r\n                                        id=\"change-expiry-date\"\r\n                                        size=\"sm\"\r\n                                        type=\"button\"\r\n                                    >\r\n                                        <i className=\"ni ni-calendar-grid-58\"></i>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip\r\n                                        delay={0}\r\n                                        placement=\"top\"\r\n                                        target=\"change-expiry-date\"\r\n                                    >\r\n                                        Change expiry date\r\n                                    </UncontrolledTooltip>\r\n\r\n                                    <Button\r\n                                        color=\"danger\"\r\n                                        data-placement=\"top\"\r\n                                        id=\"remove\"\r\n                                        size=\"sm\"\r\n                                        type=\"button\"\r\n\r\n                                        onClick={() => this.removeItem(item)}\r\n                                    >\r\n                                        <i className=\"ni ni-fat-remove\"></i>\r\n                                    </Button>\r\n                                    <UncontrolledTooltip\r\n                                        delay={0}\r\n                                        placement=\"top\"\r\n                                        target=\"remove\"\r\n                                    >\r\n                                        Remove\r\n                                    </UncontrolledTooltip>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </section>\r\n                </main>\r\n                <SimpleFooter />\r\n                <script>\r\n                    //addEventListener\r\n                    document.getElementByTag('a').addEventListener('click', onClickHandler);\r\n                </script>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Argon\\examples\\Profile.js",[],"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\components\\Footers\\SimpleFooter.js",["42"],"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\components\\Navbars\\DemoNavbar.js",[],"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Argon\\examples\\Login.js",[],"C:\\Users\\Jimmy\\Downloads\\Greenbook\\src\\views\\Recipe.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":12,"column":5,"nodeType":"50","messageId":"51","endLine":12,"endColumn":8},{"ruleId":"48","severity":1,"message":"52","line":13,"column":5,"nodeType":"50","messageId":"51","endLine":13,"endColumn":8},{"ruleId":"53","severity":1,"message":"54","line":69,"column":27,"nodeType":"55","messageId":"56","endLine":69,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":191,"column":25,"nodeType":"59","endLine":194,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":93,"column":19,"nodeType":"62","endLine":96,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":131,"column":21,"nodeType":"62","endLine":131,"endColumn":58},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]